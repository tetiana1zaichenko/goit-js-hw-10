{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nlet userSelectedDate = 0;\nlet intervalId = null;\nlet dif = null;\nconst input = document.querySelector(\"#datetime-picker\");\nconst btnStart = document.querySelector(\"button[data-start]\");\nconst clockface = document.querySelector(\".timer\");\nconst days = document.querySelector(\"[data-days]\");\nconst hours = document.querySelector(\"[data-hours]\");\nconst minutes = document.querySelector(\"[data-minutes]\");\nconst seconds = document.querySelector(\"[data-seconds]\");\n\nconst options = {\n  enableTime: true, // включает выбор времени\n  time_24hr: true, //24часовой режим отображения\n  defaultDate: new Date(), // начальная выбранная дата (текущая дата)\n  minuteIncrement: 1, // шаг ввода минут\n  onClose(selectedDates) {\n      console.log(selectedDates[0]);\n      userSelectedDate = selectedDates[0];\n      if (userSelectedDate <= new Date()) {\n           \n          iziToast.show({\n    title: 'Hey',\n    message: 'Please choose a date in the future'\n});\n           btnStart.setAttribute(\"disabled\", \"\");\n           userSelectedDate = 0;\n    } else {\n      btnStart.removeAttribute(\"disabled\");\n    }\n  },\n};\n\nbtnStart.setAttribute(\"disabled\", \"\");\nflatpickr(input, options);\n\n\nbtnStart.addEventListener('click', evt => {\n    intervalId = setInterval(countTime, 1000);\n    btnStart.setAttribute(\"disabled\", \"\");\ninput.setAttribute(\"disabled\", \"\");\n})\n\nconst countTime = () => {\n    const initTime = Date.now();\n    const userInitTime = userSelectedDate.getTime()\n    dif = userInitTime - initTime;\n    console.log(userInitTime);\n    console.log(initTime);\n    const time = convertMs(dif);\n    days.textContent = addLeadingZeroForDay(time.days);\n    hours.textContent = addLeadingZero(time.hours);\n    minutes.textContent = addLeadingZero(time.minutes);\n    seconds.textContent = addLeadingZero(time.seconds);\n\n    if (dif === 0) {\n        clearInterval(intervalId);\n    };\n};\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n    const t = value.toString().padStart(2, '0');\n    return t;\n};\n\nfunction addLeadingZeroForDay(value) {\n    const t = value.toString().padStart(3, '0');\n    return t;\n}\n\n\n// function addLeadingZero({ days, hours, minutes, seconds }) {\n//     const d = days.toString().padStart(3, '0');\n//     const h = hours.toString().padStart(2, '0');\n//     const m = minutes.toString().padStart(2, '0');\n//     const s = seconds.toString().padStart(2, '0');\n//     return `${d}:${h}:${m}:${s}`;\n\n// }\n\n\n// function getTimeComponents(time) {\n//     const days = (Math.floor((time % (1000 * 60 * 60 * 24 * 365)) / (1000 * 60 * 60 * 24)));\n//     const hours = (Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\n//     const mins = (Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n//     const secs = (Math.floor((time % (1000 * 60)) / (1000)));\n\n//     return { days, hours, mins, secs };\n// }\n\n// function timeToSTR({ days, hours, mins, secs }) {\n//     days = days.toString().padStart(3, '00');\n//     hours = hours.toString().padStart(2, '0');\n//     mins = mins.toString().padStart(2, '0');\n//     secs = secs.toString().padStart(2, '0');\n//     return `${days}:${hours}:${mins}:${secs}`;\n\n// }\n\n"],"names":["userSelectedDate","intervalId","dif","input","btnStart","days","hours","minutes","seconds","options","selectedDates","iziToast","flatpickr","evt","countTime","initTime","userInitTime","time","convertMs","addLeadingZeroForDay","addLeadingZero","ms","value"],"mappings":"+IAKA,IAAIA,EAAmB,EACnBC,EAAa,KACbC,EAAM,KACV,MAAMC,EAAQ,SAAS,cAAc,kBAAkB,EACjDC,EAAW,SAAS,cAAc,oBAAoB,EAC1C,SAAS,cAAc,QAAQ,EACjD,MAAMC,EAAO,SAAS,cAAc,aAAa,EAC3CC,EAAQ,SAAS,cAAc,cAAc,EAC7CC,EAAU,SAAS,cAAc,gBAAgB,EACjDC,EAAU,SAAS,cAAc,gBAAgB,EAEjDC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACnB,QAAQ,IAAIA,EAAc,CAAC,CAAC,EAC5BV,EAAmBU,EAAc,CAAC,EAC9BV,GAAoB,IAAI,MAExBW,EAAS,KAAK,CACpB,MAAO,MACP,QAAS,oCACb,CAAC,EACUP,EAAS,aAAa,WAAY,EAAE,EACpCJ,EAAmB,GAExBI,EAAS,gBAAgB,UAAU,CAEtC,CACH,EAEAA,EAAS,aAAa,WAAY,EAAE,EACpCQ,EAAUT,EAAOM,CAAO,EAGxBL,EAAS,iBAAiB,QAASS,GAAO,CACtCZ,EAAa,YAAYa,EAAW,GAAI,EACxCV,EAAS,aAAa,WAAY,EAAE,EACxCD,EAAM,aAAa,WAAY,EAAE,CACjC,CAAC,EAED,MAAMW,EAAY,IAAM,CACpB,MAAMC,EAAW,KAAK,MAChBC,EAAehB,EAAiB,QAAS,EAC/CE,EAAMc,EAAeD,EACrB,QAAQ,IAAIC,CAAY,EACxB,QAAQ,IAAID,CAAQ,EACpB,MAAME,EAAOC,EAAUhB,CAAG,EAC1BG,EAAK,YAAcc,EAAqBF,EAAK,IAAI,EACjDX,EAAM,YAAcc,EAAeH,EAAK,KAAK,EAC7CV,EAAQ,YAAca,EAAeH,EAAK,OAAO,EACjDT,EAAQ,YAAcY,EAAeH,EAAK,OAAO,EAE7Cf,IAAQ,GACR,cAAcD,CAAU,CAEhC,EAEA,SAASiB,EAAUG,EAAI,CAMrB,MAAMhB,EAAO,KAAK,MAAMgB,EAAK,KAAG,EAC1Bf,EAAQ,KAAK,MAAOe,EAAK,MAAO,IAAI,EACpCd,EAAU,KAAK,MAAQc,EAAK,MAAO,KAAQ,GAAM,EACjDb,EAAU,KAAK,MAASa,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAhB,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASY,EAAeE,EAAO,CAE3B,OADUA,EAAM,SAAQ,EAAG,SAAS,EAAG,GAAG,CAE9C,CAEA,SAASH,EAAqBG,EAAO,CAEjC,OADUA,EAAM,SAAQ,EAAG,SAAS,EAAG,GAAG,CAE9C"}